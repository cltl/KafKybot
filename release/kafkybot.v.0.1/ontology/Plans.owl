<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY owl2xml "http://www.w3.org/2006/12/owl2-xml#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY Plans "http://www.loa-cnr.it/ontologies/Plans.owl#" >
    <!ENTITY DOLCE-Lite "http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#" >
    <!ENTITY ExtendedDnS "http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#" >
    <!ENTITY TemporalRelations "http://www.loa-cnr.it/ontologies/TemporalRelations.owl#" >
    <!ENTITY FunctionalParticipation "http://www.loa-cnr.it/ontologies/FunctionalParticipation.owl#" >
]>


<rdf:RDF xmlns="http://www.loa-cnr.it/ontologies/Plans.owl#"
     xml:base="http://www.loa-cnr.it/ontologies/Plans.owl"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:DOLCE-Lite="http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#"
     xmlns:Plans="http://www.loa-cnr.it/ontologies/Plans.owl#"
     xmlns:owl2xml="http://www.w3.org/2006/12/owl2-xml#"
     xmlns:FunctionalParticipation="http://www.loa-cnr.it/ontologies/FunctionalParticipation.owl#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:TemporalRelations="http://www.loa-cnr.it/ontologies/TemporalRelations.owl#"
     xmlns:ExtendedDnS="http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#">
    <owl:Ontology rdf:about="">
        <owl:versionInfo rdf:datatype="&xsd;string">397</owl:versionInfo>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Imports: FunctionalParticipation</rdfs:comment>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The Plan Ontology. OWL engineering by Aldo Gangemi.
Most workflow patterns are captured by the task notions introduced in this ontology. Several other notions relevant for plan modelling, assement and creation are also introduced.</rdfs:comment>
        <owl:imports rdf:resource="http://www.loa-cnr.it/ontologies/FunctionalParticipation.owl"/>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#mediated-relation -->

    <owl:ObjectProperty rdf:about="&DOLCE-Lite;mediated-relation"/>
    


    <!-- http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#mediated-relation-i -->

    <owl:ObjectProperty rdf:about="&DOLCE-Lite;mediated-relation-i"/>
    


    <!-- http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#proper-part -->

    <owl:ObjectProperty rdf:about="&DOLCE-Lite;proper-part">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#proper-part-of -->

    <owl:ObjectProperty rdf:about="&DOLCE-Lite;proper-part-of">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#specific-constant-dependent -->

    <owl:ObjectProperty rdf:about="&DOLCE-Lite;specific-constant-dependent"/>
    


    <!-- http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#specifically-constantly-dependent-on -->

    <owl:ObjectProperty rdf:about="&DOLCE-Lite;specifically-constantly-dependent-on"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#adopts -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;adopts"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#classifies -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;classifies"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#component -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;component"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#d-used-by -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;d-used-by">
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;concept"/>
                    <rdf:Description rdf:about="&ExtendedDnS;figure"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#d-uses -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;d-uses"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#defined-by -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;defined-by">
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;concept"/>
                    <rdf:Description rdf:about="&ExtendedDnS;figure"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#direct-predecessor -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;direct-predecessor"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#direct-successor -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;direct-successor"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#expected-by -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;expected-by"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#has-in-scope -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;has-in-scope"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#modal-target -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;modal-target"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#modal-target-of -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;modal-target-of"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#p-sat -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;p-sat"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#predecessor -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;predecessor">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#referenced-by -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;referenced-by"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#references -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;references"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#requisite -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;requisite">
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;course"/>
                    <rdf:Description rdf:about="&ExtendedDnS;figure"/>
                    <rdf:Description rdf:about="&ExtendedDnS;information-object"/>
                    <rdf:Description rdf:about="&ExtendedDnS;role"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#satisfies -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;satisfies"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#sequenced-by -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;sequenced-by"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#sequences -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;sequences"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#successor -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;successor">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#valued-by -->

    <owl:ObjectProperty rdf:about="&ExtendedDnS;valued-by"/>
    


    <!-- http://www.loa-cnr.it/ontologies/FunctionalParticipation.owl#product -->

    <owl:ObjectProperty rdf:about="&FunctionalParticipation;product"/>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#achievable-through -->

    <owl:ObjectProperty rdf:about="#achievable-through">
        <rdfs:comment rdf:datatype="&xsd;string"
            >The goal state described by the goal of a plan can be achieved by executing activities that are sequenced by some task (either elementary or complex). The relation between the goal and the task is called here &#39;achievable-through&#39;.</rdfs:comment>
        <rdfs:domain rdf:resource="&ExtendedDnS;goal"/>
        <rdfs:subPropertyOf rdf:resource="&ExtendedDnS;references"/>
        <rdfs:range rdf:resource="&ExtendedDnS;task"/>
        <owl:inverseOf rdf:resource="#contributes-to-achieving-of"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#adopts-goal -->

    <owl:ObjectProperty rdf:about="#adopts-goal">
        <rdfs:comment rdf:datatype="&xsd;string"
            >Adoption holding for goals.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&ExtendedDnS;adopts"/>
        <rdfs:range rdf:resource="&ExtendedDnS;goal"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;rational-agent"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#adopts-plan -->

    <owl:ObjectProperty rdf:about="#adopts-plan">
        <rdfs:comment rdf:datatype="&xsd;string"
            >Adoption holding for plans.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&ExtendedDnS;adopts"/>
        <rdfs:range rdf:resource="&ExtendedDnS;plan"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;rational-agent"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#assigned-to -->

    <owl:ObjectProperty rdf:about="#assigned-to">
        <rdfs:subPropertyOf rdf:resource="&ExtendedDnS;modal-target-of"/>
        <rdfs:range rdf:resource="&ExtendedDnS;role"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;task"/>
        <owl:inverseOf rdf:resource="#has-assignment"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#contributes-to-achieving-of -->

    <owl:ObjectProperty rdf:about="#contributes-to-achieving-of">
        <rdfs:range rdf:resource="&ExtendedDnS;goal"/>
        <rdfs:subPropertyOf rdf:resource="&ExtendedDnS;referenced-by"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;task"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#discarded-within -->

    <owl:ObjectProperty rdf:about="#discarded-within">
        <rdfs:comment rdf:datatype="&xsd;string"
            >A task can be discarded within some plan. In this case, it is ignored in plan execution without affecting the satisfaction of the plan. A discarded task can appear only as a direct successor to a deliberation task.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&ExtendedDnS;d-used-by"/>
        <rdfs:range rdf:resource="&ExtendedDnS;plan"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;task"/>
        <owl:inverseOf rdf:resource="#discards"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#discards -->

    <owl:ObjectProperty rdf:about="#discards">
        <rdfs:subPropertyOf rdf:resource="&ExtendedDnS;d-uses"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;plan"/>
        <rdfs:range rdf:resource="&ExtendedDnS;task"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#disposition-to -->

    <owl:ObjectProperty rdf:about="#disposition-to">
        <rdfs:comment rdf:datatype="&xsd;string"
            >We define a disposition relation between the roles used in a plan having a main goal, and the influenced goal.For example, the role &#39;eater&#39; can have a disposition to being satiated, meaning that a person playing the role of eater that adopts that plan can act in order to be satiated.Disposition relation is useful to account for those cases in which a task addressed by a role is not internal to the plan, but the plan is a subplan of another one in which that task is represented as a full-fledged goal.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation"/>
        <rdfs:range rdf:resource="&ExtendedDnS;goal"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;role"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#exit-condition -->

    <owl:ObjectProperty rdf:about="#exit-condition">
        <rdfs:comment rdf:datatype="&xsd;string"
            >Exit condition can be used to state what deliberation task causes to exit a cycle.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&ExtendedDnS;successor"/>
        <rdfs:domain rdf:resource="#control-task"/>
        <rdfs:range rdf:resource="#control-task"/>
        <owl:inverseOf rdf:resource="#exit-condition-of"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#exit-condition-of -->

    <owl:ObjectProperty rdf:about="#exit-condition-of">
        <rdfs:subPropertyOf rdf:resource="&ExtendedDnS;predecessor"/>
        <rdfs:domain rdf:resource="#control-task"/>
        <rdfs:range rdf:resource="#control-task"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#has-assignment -->

    <owl:ObjectProperty rdf:about="#has-assignment">
        <rdfs:subPropertyOf rdf:resource="&ExtendedDnS;modal-target"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;role"/>
        <rdfs:range rdf:resource="&ExtendedDnS;task"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#influenced-by -->

    <owl:ObjectProperty rdf:about="#influenced-by">
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;specifically-constantly-dependent-on"/>
        <rdfs:range rdf:resource="&ExtendedDnS;goal"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;goal"/>
        <owl:inverseOf rdf:resource="#influences"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#influences -->

    <owl:ObjectProperty rdf:about="#influences">
        <rdfs:comment rdf:datatype="&xsd;string"
            >A relation between a goal and the main goal of the plan it is a subgoal of. Usable for talking of dependencies between goals.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;specific-constant-dependent"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;goal"/>
        <rdfs:range rdf:resource="&ExtendedDnS;goal"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#iteration-interval -->

    <owl:ObjectProperty rdf:about="#iteration-interval">
        <rdfs:comment rdf:datatype="&xsd;string"
            >iteration interval can be used to state how much time should be taken by each iteration of the looped activity</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation"/>
        <rdfs:range rdf:resource="&DOLCE-Lite;time-interval"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;task"/>
        <owl:inverseOf rdf:resource="#iteration-interval-of"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#iteration-interval-of -->

    <owl:ObjectProperty rdf:about="#iteration-interval-of">
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation-i"/>
        <rdfs:domain rdf:resource="&DOLCE-Lite;time-interval"/>
        <rdfs:range rdf:resource="&ExtendedDnS;task"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#main-goal -->

    <owl:ObjectProperty rdf:about="#main-goal">
        <rdfs:comment rdf:datatype="&xsd;string"
            >The relation between a plan and its main goal.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;proper-part"/>
        <rdfs:range rdf:resource="&ExtendedDnS;goal"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;plan"/>
        <owl:inverseOf rdf:resource="#main-goal-of"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#main-goal-of -->

    <owl:ObjectProperty rdf:about="#main-goal-of">
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;proper-part-of"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;goal"/>
        <rdfs:range rdf:resource="&ExtendedDnS;plan"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#postcondition -->

    <owl:ObjectProperty rdf:about="#postcondition">
        <rdfs:comment rdf:datatype="&xsd;string"
            >A situation is a post-condition of the execution of a method (and of its tasks) when it is a successor (however succession is interpreted, although temporal interpretation is the usual one) of that execution, and is constituted by a subset of the individuals that constitute the execution situation.  For example, a surgical guideline describes how to carry out a heart transplant:  its (expected) execution situation is constituted by the perdurants, endurants,  and regions described by the guideline, while its post-condition situation might be  only constituted by the transplanted heart, its anatomical and morphological  environment, the physiological functions in which it participates, and some  physiological values. But the devices used during the transplantation and the surgeon can be external to the post-condition situation.  This definition does not cover the possibility of a post-condition having constituents that are not involved in the description. This is a difficult issue. A possible solution is that such post-conditions are actually referenced by other descriptions that -for instance- &#39;control&#39; the outcome of a procedure, or &#39;reconstruct&#39; a set of events under an independent unity criterion. If this solution is applicable, such post-conditions would be maximal situations requiring the composition (bundle) of two or more related descriptions.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;description"/>
        <rdfs:range rdf:resource="&ExtendedDnS;situation"/>
        <owl:inverseOf rdf:resource="#postcondition-of"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#postcondition-of -->

    <owl:ObjectProperty rdf:about="#postcondition-of">
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation-i"/>
        <rdfs:range rdf:resource="&ExtendedDnS;description"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;situation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#precondition -->

    <owl:ObjectProperty rdf:about="#precondition">
        <rdfs:comment rdf:datatype="&xsd;string"
            >A situation is a pre-condition of the execution of a method (and of its tasks) when it is a predecessor (however succession is interpreted, although temporal interpretation is the usual one) of that execution, and is constituted by a subset of the individuals that constitute the execution  situation.  For example, a surgical guideline describes how to carry out a heart transplant:  its (expected) execution situation is constituted by the perdurants, endurants,  and regions described by the guideline, while its pre-condition situation might be  only constituted by the heart to be removed, the one to be transplanted, their  anatomical and morphological environment, the physiological functions in which they  participates, and some physiological values.  But the devices used during the transplantation and the surgeon might (or might not) be external to the pre-condition situation.  This definition does not cover the possibility of a pre-condition having constituents that are not involved in the description. This is a difficult issue. A possible solution is that such pre-conditions are actually referenced by other descriptions that -for instance- &#39;control&#39; the feasibility of a procedure, or &#39;analyze&#39; a set of events under an independent unity criterion. If this solution is applicable, such pre-conditions would be &#39;maximal&#39; situations requiring the &#39;composition&#39; of two or more related descriptions.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;description"/>
        <rdfs:range rdf:resource="&ExtendedDnS;situation"/>
        <owl:inverseOf rdf:resource="#precondition-of"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#precondition-of -->

    <owl:ObjectProperty rdf:about="#precondition-of">
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation-i"/>
        <rdfs:range rdf:resource="&ExtendedDnS;description"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;situation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#sibling-task -->

    <owl:ObjectProperty rdf:about="#sibling-task">
        <rdfs:comment rdf:datatype="&xsd;string"
            >Two tasks contained in the same plan.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation"/>
        <rdfs:range rdf:resource="&ExtendedDnS;task"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;task"/>
        <owl:inverseOf rdf:resource="#sibling-task"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#subgoal -->

    <owl:ObjectProperty rdf:about="#subgoal">
        <rdfs:comment rdf:datatype="&xsd;string"
            >A subgoal (relative to a plan) is a goal that is a part of a subplan.A goal is not necessarily a part of the main goal of the plan it is a subgoal of. E.g. consider the goal: being satiated; eating food can be a subgoal of the plan that has being satiated as its main goal, but it is not a part of being satiated.See also relations: influence, disposition to.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;proper-part"/>
        <rdfs:range rdf:resource="&ExtendedDnS;goal"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;plan"/>
        <owl:inverseOf rdf:resource="#subgoal-of"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#subgoal-of -->

    <owl:ObjectProperty rdf:about="#subgoal-of">
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;proper-part-of"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;goal"/>
        <rdfs:range rdf:resource="&ExtendedDnS;plan"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#task-postcondition -->

    <owl:ObjectProperty rdf:about="#task-postcondition">
        <rdfs:comment rdf:datatype="&xsd;string"
            >The execution of a task (an action classified by it) can make a new situation emerge: in this case the task has a task-postcondition.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation"/>
        <rdfs:range rdf:resource="&ExtendedDnS;situation"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;task"/>
        <owl:inverseOf rdf:resource="#task-postcondition-of"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#task-postcondition-of -->

    <owl:ObjectProperty rdf:about="#task-postcondition-of">
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation-i"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;situation"/>
        <rdfs:range rdf:resource="&ExtendedDnS;task"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#task-precondition -->

    <owl:ObjectProperty rdf:about="#task-precondition">
        <rdfs:comment rdf:datatype="&xsd;string"
            >The execution of a task (an action classified by it) can require that a situation holds: in this case the task has a task-precondition.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation"/>
        <rdfs:range rdf:resource="&ExtendedDnS;situation"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;task"/>
        <owl:inverseOf rdf:resource="#task-precondition-of"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#task-precondition-of -->

    <owl:ObjectProperty rdf:about="#task-precondition-of">
        <rdfs:subPropertyOf rdf:resource="&DOLCE-Lite;mediated-relation-i"/>
        <rdfs:domain rdf:resource="&ExtendedDnS;situation"/>
        <rdfs:range rdf:resource="&ExtendedDnS;task"/>
    </owl:ObjectProperty>
    


    <!-- http://www.loa-cnr.it/ontologies/TemporalRelations.owl#follows -->

    <owl:ObjectProperty rdf:about="&TemporalRelations;follows">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#iteration-cardinality -->

    <owl:DatatypeProperty rdf:about="#iteration-cardinality">
        <rdfs:comment rdf:datatype="&xsd;string"
            >iteration cardinality can be used to state in a task how many times an action should be repeated</rdfs:comment>
        <rdfs:domain rdf:resource="&ExtendedDnS;task"/>
        <rdfs:range rdf:resource="&xsd;integer"/>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#particular -->

    <owl:Class rdf:about="&DOLCE-Lite;particular"/>
    


    <!-- http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#space-region -->

    <owl:Class rdf:about="&DOLCE-Lite;space-region"/>
    


    <!-- http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#state -->

    <owl:Class rdf:about="&DOLCE-Lite;state"/>
    


    <!-- http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#time-interval -->

    <owl:Class rdf:about="&DOLCE-Lite;time-interval"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#action -->

    <owl:Class rdf:about="&ExtendedDnS;action"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#activity -->

    <owl:Class rdf:about="&ExtendedDnS;activity">
        <rdfs:subClassOf rdf:resource="&ExtendedDnS;action"/>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#concept -->

    <owl:Class rdf:about="&ExtendedDnS;concept"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#course -->

    <owl:Class rdf:about="&ExtendedDnS;course"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#description -->

    <owl:Class rdf:about="&ExtendedDnS;description"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#figure -->

    <owl:Class rdf:about="&ExtendedDnS;figure"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#goal -->

    <owl:Class rdf:about="&ExtendedDnS;goal"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#information-object -->

    <owl:Class rdf:about="&ExtendedDnS;information-object"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#parameter -->

    <owl:Class rdf:about="&ExtendedDnS;parameter"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#plan -->

    <owl:Class rdf:about="&ExtendedDnS;plan">
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;d-uses"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ExtendedDnS;task"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="#assigned-to"/>
                                <owl:someValuesFrom rdf:resource="&ExtendedDnS;role"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#rational-agent -->

    <owl:Class rdf:about="&ExtendedDnS;rational-agent"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#role -->

    <owl:Class rdf:about="&ExtendedDnS;role"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#situation -->

    <owl:Class rdf:about="&ExtendedDnS;situation"/>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#task -->

    <owl:Class rdf:about="&ExtendedDnS;task">
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;component"/>
                <owl:allValuesFrom rdf:resource="&ExtendedDnS;task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/ExtendedDnS.owl#technique -->

    <owl:Class rdf:about="&ExtendedDnS;technique"/>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#abandonment-task -->

    <owl:Class rdf:about="#abandonment-task">
        <rdfs:subClassOf rdf:resource="#ending-task"/>
        <owl:disjointWith rdf:resource="#abortion-task"/>
        <owl:disjointWith rdf:resource="#completion-task"/>
        <owl:disjointWith rdf:resource="#suspension-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A specialization of ending-task, aimed at sequencing events that end a plan execution without having reached its main-goal, and with no intention to resurrect the plan.
While &#39;abortion&#39; depends on external causes, &#39;abandonment&#39; depends on decisions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#abortion-task -->

    <owl:Class rdf:about="#abortion-task">
        <rdfs:subClassOf rdf:resource="#ending-task"/>
        <owl:disjointWith rdf:resource="#completion-task"/>
        <owl:disjointWith rdf:resource="#suspension-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A specialization of ending-task, aimed at sequencing events that end a plan execution without having reached its main-goal for a certain time, and can be considered with no chance of resurrecting the original plan execution. While &#39;abortion&#39; depends on external causes, &#39;abandonment&#39; depends on decisions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#abstract-merging-task -->

    <owl:Class rdf:about="#abstract-merging-task">
        <rdfs:subClassOf rdf:resource="#merging-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;predecessor"/>
                <owl:someValuesFrom rdf:resource="#case-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >An abstract merging task is a merging aimed at &#39;formally&#39; joining the tasks that are direct successor to a case task.
Differently from synchronization tasks, which are expected to be executed, abstract mergings only provide abstract boundaries to a task structure, because in a case task, only one action task is supposed to be executed.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#abstract-plan -->

    <owl:Class rdf:about="#abstract-plan">
        <rdfs:subClassOf rdf:resource="&ExtendedDnS;plan"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >An abstract plan is a plan whose roles and tasks only specify classes of entities that can be included in a plan execution. In other words, a component from an abstract plan does not assume to classify any named entity. This condition cannot be formalized in FOL, since we would like to express a condition by which an instance of an abstract plan specifies instances of plan components, but no instances of situation elements, e.g. that &#39;manager&#39; classifies some (if any) instance of person, but not a specified (named) person.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#acceptation-task -->

    <owl:Class rdf:about="#acceptation-task">
        <rdfs:subClassOf rdf:resource="#plan-assessment-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;sequences"/>
                <owl:allValuesFrom rdf:resource="#decision-activity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-successor"/>
                <owl:someValuesFrom rdf:resource="#decidedness-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#consideredness-task"/>
        <owl:disjointWith rdf:resource="#decidedness-task"/>
        <owl:disjointWith rdf:resource="#possibility-task"/>
        <owl:disjointWith rdf:resource="#preparedness-task"/>
        <owl:disjointWith rdf:resource="#readiness-task"/>
        <owl:disjointWith rdf:resource="#rejection-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The task sequencing a positive decision to adopt a plan for execution.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#action-task -->

    <owl:Class rdf:about="#action-task">
        <rdfs:subClassOf rdf:resource="#elementary-task"/>
        <owl:disjointWith rdf:resource="#control-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >An action task is an elementary task that sequences non-planning activities, like: moving, exercising forces, gathering information, etc. Planning activites are mental events involving some rational event.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#activation-task -->

    <owl:Class rdf:about="#activation-task">
        <rdfs:subClassOf rdf:resource="#control-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-successor"/>
                <owl:someValuesFrom rdf:resource="&ExtendedDnS;task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#branching-task"/>
        <owl:disjointWith rdf:resource="#deliberation-task"/>
        <owl:disjointWith rdf:resource="#loop-task"/>
        <owl:disjointWith rdf:resource="#synchro-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A control task aimed at starting an activity. It is specialized either by a beginning task or a reactivation task.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#alternate-task -->

    <owl:Class rdf:about="#alternate-task">
        <rdfs:subClassOf rdf:resource="#case-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-successor"/>
                <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">2</owl:cardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A case task branched to exactly 2 tasks, not executable in  parallel.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#any-order-task -->

    <owl:Class rdf:about="#any-order-task">
        <rdfs:subClassOf rdf:resource="#branching-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;successor"/>
                <owl:someValuesFrom rdf:resource="#synchro-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#case-task"/>
        <owl:disjointWith rdf:resource="#concurrency-task"/>
        <owl:disjointWith rdf:resource="#partly-case-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >An any order task is a branching task that defines no order in the successor tasks. It&#237;s another way of defining a bag task, because any temporal relation can be expected between any two perdurants sequenced by the tasks that are direct successor to the any order task.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#bag-task -->

    <owl:Class rdf:about="#bag-task">
        <rdfs:subClassOf rdf:resource="#complex-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;component"/>
                <owl:allValuesFrom>
                    <owl:Class>
                        <owl:complementOf rdf:resource="#control-task"/>
                    </owl:Class>
                </owl:allValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A bag task is a complex task that does not include either a control task, or a successor relation among any two component tasks.The last condition cannot be stated in OWL-DL, because it needs a coreference.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#beginning-task -->

    <owl:Class rdf:about="#beginning-task">
        <rdfs:subClassOf rdf:resource="#activation-task"/>
        <owl:disjointWith rdf:resource="#reactivation-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A beginning task is a control task that is the predecessor of all tasks defined in the plan.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#branching-task -->

    <owl:Class rdf:about="#branching-task">
        <rdfs:subClassOf rdf:resource="#control-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-successor"/>
                <owl:minCardinality rdf:datatype="&xsd;nonNegativeInteger">2</owl:minCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;sequences"/>
                <owl:allValuesFrom rdf:resource="#planning-activity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#deliberation-task"/>
        <owl:disjointWith rdf:resource="#ending-task"/>
        <owl:disjointWith rdf:resource="#loop-task"/>
        <owl:disjointWith rdf:resource="#synchro-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A task that articulates the plan into an ordered set of tasks.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#case-task -->

    <owl:Class rdf:about="#case-task">
        <rdfs:subClassOf rdf:resource="#branching-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;successor"/>
                <owl:someValuesFrom rdf:resource="#deliberation-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#concurrency-task"/>
        <owl:disjointWith rdf:resource="#partly-case-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A case task is a task branched to a set of tasks that are not executable concurrently. In order to choose which task has to be undertaken, preliminary deliberation tasks should be executed, possibly based on information-gathering and decision rationales. BTW, the representation of decision making processes is not addressed in this ontology, and only a minimal formalization is provided as follows.
A case task &#39;sequences&#39; a decision-activity (a kind of mental event involving rationality) that has a deliberation-state as an outcome (i.e. it is &#39;sequenced-by&#39; a deliberation-task).</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#circumstantial-plan -->

    <owl:Class rdf:about="#circumstantial-plan">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;plan"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;d-uses"/>
                        <owl:allValuesFrom>
                            <owl:Class>
                                <owl:intersectionOf rdf:parseType="Collection">
                                    <rdf:Description rdf:about="&ExtendedDnS;concept"/>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&ExtendedDnS;classifies"/>
                                        <owl:someValuesFrom rdf:resource="&DOLCE-Lite;particular"/>
                                    </owl:Restriction>
                                </owl:intersectionOf>
                            </owl:Class>
                        </owl:allValuesFrom>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A circumstantial plan has all components classifying named individuals from the ground ontology (e.g. only specific persons, specified resources, a finite number of time intervals and space regions, etc.).This condition cannot be formalized in FOL, since we would like to express a condition by which an instance of an circumstantial plan specifies both instances of plan components, and instances of situation elements, e.g. that &#39;manager&#39; classifies a specified (named) person.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#completion-task -->

    <owl:Class rdf:about="#completion-task">
        <rdfs:subClassOf rdf:resource="#ending-task"/>
        <owl:disjointWith rdf:resource="#suspension-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A specialization of ending-task, aimed at sequencing events that end a plan execution having reached its main-goal.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#complex-task -->

    <owl:Class rdf:about="#complex-task">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;task"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;component"/>
                        <owl:minCardinality rdf:datatype="&xsd;nonNegativeInteger">2</owl:minCardinality>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <owl:disjointWith rdf:resource="#elementary-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A task that has at least two other tasks as components.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#concurrency-task -->

    <owl:Class rdf:about="#concurrency-task">
        <rdfs:subClassOf rdf:resource="#branching-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;successor"/>
                <owl:someValuesFrom rdf:resource="#synchro-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#partly-case-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A concurrent task is a task branched to a set of tasks executable concurrently -the sequenced perdurants can overlap-, which means that no deliberation task is performed in order to choose among them. A concurrent task has at least one successor synchronization task, which is aimed at waiting for the execution of all -except the optional ones- tasks direct successor to the concurrent -or any order, see below- one.The axioms cannot be expressed fully in OWL-DL (no value mapping available).</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#consideredness-task -->

    <owl:Class rdf:about="#consideredness-task">
        <rdfs:subClassOf rdf:resource="#plan-assessment-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;sequences"/>
                <owl:allValuesFrom rdf:resource="#decision-activity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-successor"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:unionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="#acceptation-task"/>
                            <rdf:Description rdf:about="#rejection-task"/>
                        </owl:unionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#decidedness-task"/>
        <owl:disjointWith rdf:resource="#possibility-task"/>
        <owl:disjointWith rdf:resource="#preparedness-task"/>
        <owl:disjointWith rdf:resource="#readiness-task"/>
        <owl:disjointWith rdf:resource="#rejection-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The task sequencing a decision activity, aiming at if action has to be taken in order to start a plan execution.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#control-task -->

    <owl:Class rdf:about="#control-task">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="#elementary-task"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;sequences"/>
                        <owl:allValuesFrom>
                            <owl:Class>
                                <owl:unionOf rdf:parseType="Collection">
                                    <rdf:Description rdf:about="#decision-state"/>
                                    <rdf:Description rdf:about="#planning-activity"/>
                                </owl:unionOf>
                            </owl:Class>
                        </owl:allValuesFrom>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A control task is an elementary task that sequences a planning activity, e.g. an activity aimed at (cognitively or via simulation) anticipating other activities. Therefore, control tasks have usually at least one direct successor task (the controlled one), with the exception of ending tasks.The reification of control constructs allows to represent procedural knowledge into the same ontology including controlled action. Besides conceptual transparency and independency from a particular grounding system, a further advantage is enabling the representation of coordination tasks. For example, a manager that coordinates the execution of several related activities can be represented as a role with a responsibility (duty+right) towards some complex task.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#decidedness-task -->

    <owl:Class rdf:about="#decidedness-task">
        <rdfs:subClassOf rdf:resource="#plan-assessment-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;sequences"/>
                <owl:allValuesFrom rdf:resource="#decision-activity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-successor"/>
                <owl:someValuesFrom rdf:resource="#preparedness-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#possibility-task"/>
        <owl:disjointWith rdf:resource="#preparedness-task"/>
        <owl:disjointWith rdf:resource="#readiness-task"/>
        <owl:disjointWith rdf:resource="#rejection-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The task sequencing a decision to take action in order to start a plan execution.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#decision-activity -->

    <owl:Class rdf:about="#decision-activity">
        <rdfs:subClassOf rdf:resource="#planning-activity"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;sequenced-by"/>
                <owl:someValuesFrom rdf:resource="#case-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >An activity related to planning. It is sequenced by &#39;case task&#39;, and can contain an information gathering activity.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#decision-state -->

    <owl:Class rdf:about="#decision-state">
        <rdfs:subClassOf rdf:resource="&DOLCE-Lite;state"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;sequenced-by"/>
                <owl:someValuesFrom rdf:resource="#deliberation-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&TemporalRelations;follows"/>
                <owl:someValuesFrom rdf:resource="#decision-activity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A state related to planning. It is sequenced by &#39;deliberation task&#39;, and is preceded by a decision activity.
When a plan is &#39;private&#39;, a decision state is cognitive, otherwise it depends on some cognitive state.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#deliberation-task -->

    <owl:Class rdf:about="#deliberation-task">
        <rdfs:subClassOf rdf:resource="#control-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;sequences"/>
                <owl:allValuesFrom rdf:resource="#decision-state"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;predecessor"/>
                <owl:someValuesFrom rdf:resource="#case-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#ending-task"/>
        <owl:disjointWith rdf:resource="#loop-task"/>
        <owl:disjointWith rdf:resource="#synchro-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A deliberation task is a control task that sequences deliberation states (decisions taken after a case task execution).</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#elementary-task -->

    <owl:Class rdf:about="#elementary-task">
        <rdfs:subClassOf rdf:resource="&ExtendedDnS;task"/>
        <rdfs:comment rdf:datatype="&xsd;string">An atomic task.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#ending-task -->

    <owl:Class rdf:about="#ending-task">
        <rdfs:subClassOf rdf:resource="#control-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-predecessor"/>
                <owl:someValuesFrom rdf:resource="&ExtendedDnS;task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#loop-task"/>
        <owl:disjointWith rdf:resource="#synchro-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >An ending task is a control task that has no successor tasks defined in the plan.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#goal-qua-main -->

    <owl:Class rdf:about="#goal-qua-main">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;goal"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="#main-goal-of"/>
                        <owl:someValuesFrom rdf:resource="&ExtendedDnS;plan"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A main goal can be defined as a goal that is part of a plan but not of one of its subplans. The characteristic axiom cannot be formalized in OWL-DL (it requires coreference).</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#goal-situation -->

    <owl:Class rdf:about="#goal-situation">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;situation"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;satisfies"/>
                        <owl:someValuesFrom rdf:resource="&ExtendedDnS;goal"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A goal situation is a situation that satisfies a goal.Opposite to the case of subplan executions, a goal situation is not part of a plan execution.In other words, it is not true in general that any situation satisfying a part of a description, is also part of the situation that satisfies the whole description. This helps to account for the following cases: a) Execution of plans containing abort or suspension conditions (the plan would be satisfied even if the goal has not been reached, see below), b) Incidental satisfaction, like when a situation satisfies a goal without being intentionally planned (but anyway desired).</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#information-gathering -->

    <owl:Class rdf:about="#information-gathering">
        <rdfs:subClassOf rdf:resource="&ExtendedDnS;activity"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >An activity aimed at gathering information for some purpose. It is typically sequenced by case tasks for taking decisions (can be part of decision activities).</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#loop-for -->

    <owl:Class rdf:about="#loop-for">
        <rdfs:subClassOf rdf:resource="#loop-task"/>
        <owl:disjointWith rdf:resource="#loop-until"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A loop task with a defined number -and possibly frequency- of iterations.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#loop-task -->

    <owl:Class rdf:about="#loop-task">
        <rdfs:subClassOf rdf:resource="#control-task"/>
        <owl:disjointWith rdf:resource="#synchro-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A loop task is a control task that has as successor an action -or complex- task that sequences at least two distinct activities sharing a minimal common set of properties -they have a MinimalCommonType. Notice that MinimalCommonType cannot be formalised as a first-order predicate, and then neither in OWL-DL. It can be considered a trivial guideline: when sequencing looped actions, choose a definite action class from the ground ontology.
Some relations typically hold for loop tasks. Exit condition can be used to state what deliberation task causes to exit the cycle; iteration interval can be used to state how much time should be taken by each iteration of the looped activity; iteration cardinality can be used to state how many times the action should be repeated.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#loop-until -->

    <owl:Class rdf:about="#loop-until">
        <rdfs:subClassOf rdf:resource="#loop-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A loop task, which specifies when a certain condition becomes true for a cyclical task to exit.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#maximal-task -->

    <owl:Class rdf:about="#maximal-task">
        <rdfs:subClassOf rdf:resource="#complex-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A maximal task is a complex task that has all the tasks defined in a plan as components.In OWL-DL the axiom is defined as a concept axiom over plan component task.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#merging-task -->

    <owl:Class rdf:about="#merging-task">
        <rdfs:subClassOf rdf:resource="#control-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A task that joins a set of tasks after a branching.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#parallel-task -->

    <owl:Class rdf:about="#parallel-task">
        <rdfs:subClassOf rdf:resource="#concurrency-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A task for parallel concurrent activities.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#partly-case-task -->

    <owl:Class rdf:about="#partly-case-task">
        <rdfs:subClassOf rdf:resource="#branching-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;successor"/>
                <owl:someValuesFrom rdf:resource="#synchro-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-successor"/>
                <owl:someValuesFrom rdf:resource="#case-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A control task that directly precedes both a case task and some other task.It specializes the branching task.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#plan-assessment -->

    <owl:Class rdf:about="#plan-assessment">
        <rdfs:subClassOf rdf:resource="&ExtendedDnS;technique"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;has-in-scope"/>
                <owl:someValuesFrom rdf:resource="#plan-execution"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A technique to evaluate a plan execution.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#plan-assessment-task -->

    <owl:Class rdf:about="#plan-assessment-task">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="#control-task"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;defined-by"/>
                        <owl:someValuesFrom rdf:resource="#plan-assessment"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A task defined in a plan assessment.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#plan-execution -->

    <owl:Class rdf:about="#plan-execution">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;situation"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;p-sat"/>
                        <owl:someValuesFrom rdf:resource="&ExtendedDnS;plan"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Plan executions are situations that proactively satisfy a plan (cf. definition of P-SAT above). Subplan executions are proper parts of the whole plan execution.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#planning-activity -->

    <owl:Class rdf:about="#planning-activity">
        <rdfs:subClassOf rdf:resource="&ExtendedDnS;activity"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;expected-by"/>
                <owl:someValuesFrom rdf:resource="#planning-as-technique"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&FunctionalParticipation;product"/>
                <owl:allValuesFrom rdf:resource="&ExtendedDnS;plan"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The activity to generate a plan.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#planning-as-technique -->

    <owl:Class rdf:about="#planning-as-technique">
        <rdfs:subClassOf rdf:resource="&ExtendedDnS;technique"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The technique by which a planning process can be carried out.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#possibility-task -->

    <owl:Class rdf:about="#possibility-task">
        <rdfs:subClassOf rdf:resource="#plan-assessment-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-successor"/>
                <owl:someValuesFrom rdf:resource="#consideredness-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#preparedness-task"/>
        <owl:disjointWith rdf:resource="#readiness-task"/>
        <owl:disjointWith rdf:resource="#rejection-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The task sequencing an activity from which the possibility is raised to execute a plan.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#preparedness-task -->

    <owl:Class rdf:about="#preparedness-task">
        <rdfs:subClassOf rdf:resource="#plan-assessment-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-successor"/>
                <owl:someValuesFrom rdf:resource="#readiness-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#readiness-task"/>
        <owl:disjointWith rdf:resource="#rejection-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The task sequencing an assessment that the activities aiming at creating the prerequisites to start a plan execution are completed.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#reactivation-task -->

    <owl:Class rdf:about="#reactivation-task">
        <rdfs:subClassOf rdf:resource="#activation-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >An activation task to start a plan execution after it has been suspended.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#readiness-task -->

    <owl:Class rdf:about="#readiness-task">
        <rdfs:subClassOf rdf:resource="#plan-assessment-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;direct-successor"/>
                <owl:someValuesFrom rdf:resource="#activation-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <owl:disjointWith rdf:resource="#rejection-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The task joining the decision and preparation phases of the plan assessment, with the activation phases of the plan.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#rejection-task -->

    <owl:Class rdf:about="#rejection-task">
        <rdfs:subClassOf rdf:resource="#plan-assessment-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;sequences"/>
                <owl:allValuesFrom rdf:resource="#decision-activity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The task sequencing a negative decision to adopt a plan execution.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#saturated-plan -->

    <owl:Class rdf:about="#saturated-plan">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;plan"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;d-uses"/>
                        <owl:someValuesFrom rdf:resource="#spatially-bound-role"/>
                    </owl:Restriction>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;d-uses"/>
                        <owl:someValuesFrom rdf:resource="#temporally-bound-task"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A saturated plan is a plan that cannot be executed twice, since it defines spatio-temporal parameters restricted to one value, e.g. one of its tasks classifies an event that is valued by a definite temporal value in a definite space region.Of course, in the case of maximal spatio-temporal regions, a saturated plan tends to approximate an abstract plan from the execution viewpoint, but these worst cases are unavoidable when dealing with maximality.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#schedule -->

    <owl:Class rdf:about="#schedule">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="#complex-task"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;component"/>
                        <owl:allValuesFrom rdf:resource="#temporally-bound-task"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A schedule is a task that cannot be executed twice, since it has a temporal parameter restricted to one value. In other words, a schedule classifies a specific event, which results to be &#39;scheduled&#39;.
When a schedule is complex, all component tasks must be temporally-bound.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#sequential-task -->

    <owl:Class rdf:about="#sequential-task">
        <rdfs:subClassOf rdf:resource="#complex-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;component"/>
                <owl:someValuesFrom rdf:resource="#action-task"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;component"/>
                <owl:allValuesFrom>
                    <owl:Class>
                        <owl:complementOf rdf:resource="#control-task"/>
                    </owl:Class>
                </owl:allValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;component"/>
                <owl:minCardinality rdf:datatype="&xsd;nonNegativeInteger">2</owl:minCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A sequential task is a complex task that includes a successor relation among any two component tasks, and does not contain any control task.The first condition cannot be stated in OWL-DL, because it needs coreference.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#spatially-bound-role -->

    <owl:Class rdf:about="#spatially-bound-role">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;role"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;requisite"/>
                        <owl:someValuesFrom>
                            <owl:Class>
                                <owl:intersectionOf rdf:parseType="Collection">
                                    <rdf:Description rdf:about="&ExtendedDnS;parameter"/>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&ExtendedDnS;valued-by"/>
                                        <owl:someValuesFrom rdf:resource="&DOLCE-Lite;space-region"/>
                                    </owl:Restriction>
                                </owl:intersectionOf>
                            </owl:Class>
                        </owl:someValuesFrom>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#subplan -->

    <owl:Class rdf:about="#subplan">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ExtendedDnS;plan"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&DOLCE-Lite;proper-part-of"/>
                        <owl:someValuesFrom rdf:resource="&ExtendedDnS;plan"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A proper part of a plan.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#suspension-task -->

    <owl:Class rdf:about="#suspension-task">
        <rdfs:subClassOf rdf:resource="#ending-task"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A specialization of ending-task, aimed at sequencing events that end a plan execution without having reached its main-goal, but with the possibility or resurrecting the plan.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#synchro-task -->

    <owl:Class rdf:about="#synchro-task">
        <rdfs:subClassOf rdf:resource="#merging-task"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;predecessor"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:unionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="#any-order-task"/>
                            <rdf:Description rdf:about="#concurrency-task"/>
                            <rdf:Description rdf:about="#partly-case-task"/>
                        </owl:unionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A synchronization task is a merging aimed at waiting for the execution of all (except the optional ones) tasks that are direct successor to a concurrent or any order task.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#temporal-parameter -->

    <owl:Class rdf:about="#temporal-parameter">
        <rdfs:subClassOf rdf:resource="&ExtendedDnS;parameter"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ExtendedDnS;valued-by"/>
                <owl:allValuesFrom rdf:resource="&DOLCE-Lite;time-interval"/>
            </owl:Restriction>
        </rdfs:subClassOf>
    </owl:Class>
    


    <!-- http://www.loa-cnr.it/ontologies/Plans.owl#temporally-bound-task -->

    <owl:Class rdf:about="#temporally-bound-task">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="#action-task"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ExtendedDnS;requisite"/>
                        <owl:someValuesFrom>
                            <owl:Class>
                                <owl:intersectionOf rdf:parseType="Collection">
                                    <rdf:Description rdf:about="#temporal-parameter"/>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&ExtendedDnS;valued-by"/>
                                        <owl:someValuesFrom rdf:resource="&DOLCE-Lite;time-interval"/>
                                    </owl:Restriction>
                                </owl:intersectionOf>
                            </owl:Class>
                        </owl:someValuesFrom>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
    </owl:Class>
    


    <!-- http://www.w3.org/2002/07/owl#Thing -->

    <owl:Class rdf:about="&owl;Thing"/>
</rdf:RDF>



<!-- Generated by the OWL API (version 2.2.1.1138) http://owlapi.sourceforge.net -->

